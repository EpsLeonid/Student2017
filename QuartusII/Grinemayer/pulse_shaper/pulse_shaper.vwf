/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	PRINT_OPTIONS = "Print_options_version 6\
range_start 0ps\
range_end 10.0us\
width 1\
names_percentage 25\
comments 1\
grid_lines 1\
time_bars 1\
name_every_page 0\
expand_groups 0\
print_all 1\
print_row_height 100";
	DATA_OFFSET = 0.0;
	DATA_DURATION = 10000.0;
	SIMULATION_TIME = 10000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("signal_in")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("signal_in[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "signal_in";
}

SIGNAL("signal_in[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "signal_in";
}

SIGNAL("signal_in[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "signal_in";
}

SIGNAL("signal_in[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "signal_in";
}

SIGNAL("signal_in[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "signal_in";
}

SIGNAL("signal_in[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "signal_in";
}

SIGNAL("signal_in[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "signal_in";
}

SIGNAL("signal_in[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "signal_in";
}

SIGNAL("signal_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("signal_out[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "signal_out";
}

SIGNAL("signal_out[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "signal_out";
}

SIGNAL("signal_out[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "signal_out";
}

SIGNAL("signal_out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "signal_out";
}

SIGNAL("signal_out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "signal_out";
}

SIGNAL("signal_out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "signal_out";
}

SIGNAL("signal_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "signal_out";
}

SIGNAL("signal_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "signal_out";
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 100;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
		}
	}
}

TRANSITION_LIST("signal_in[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("signal_in[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 410.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 6990.0;
	}
}

TRANSITION_LIST("signal_in[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 310.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 310.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 910.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 6990.0;
	}
}

TRANSITION_LIST("signal_in[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 210.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 110.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 610.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 510.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 6990.0;
	}
}

TRANSITION_LIST("signal_in[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 210.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 110.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 110.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 210.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 310.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 210.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 210.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 310.0;
		LEVEL 0 FOR 6990.0;
	}
}

TRANSITION_LIST("signal_in[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 210.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 110.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 110.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 110.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 110.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 210.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 110.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 110.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 110.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 110.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 110.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 110.0;
		LEVEL 1 FOR 6990.0;
	}
}

TRANSITION_LIST("signal_in[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 210.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 310.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 110.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 110.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 710.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 210.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 210.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 6900.0;
	}
}

TRANSITION_LIST("signal_in[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 210.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 310.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 510.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 510.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 210.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 110.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 210.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 6900.0;
	}
}

TRANSITION_LIST("signal_out[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("signal_out[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("signal_out[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1156.189;
		LEVEL 1 FOR 500.1;
		LEVEL 0 FOR 8343.711;
	}
}

TRANSITION_LIST("signal_out[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 857.442;
		LEVEL 1 FOR 300.2;
		LEVEL 0 FOR 499.8;
		LEVEL 1 FOR 300.2;
		LEVEL 0 FOR 8042.358;
	}
}

TRANSITION_LIST("signal_out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 756.788;
		LEVEL 1 FOR 100.153;
		LEVEL 0 FOR 99.847;
		LEVEL 1 FOR 200.153;
		LEVEL 0 FOR 499.847;
		LEVEL 1 FOR 200.153;
		LEVEL 0 FOR 99.847;
		LEVEL 1 FOR 300.153;
		LEVEL 0 FOR 7743.059;
	}
}

TRANSITION_LIST("signal_out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 656.043;
		LEVEL 1 FOR 100.074;
		LEVEL 0 FOR 299.926;
		LEVEL 1 FOR 100.074;
		LEVEL 0 FOR 99.926;
		LEVEL 1 FOR 300.074;
		LEVEL 0 FOR 99.926;
		LEVEL 1 FOR 100.074;
		LEVEL 0 FOR 199.926;
		LEVEL 1 FOR 200.074;
		LEVEL 0 FOR 99.926;
		LEVEL 1 FOR 300.074;
		LEVEL 0 FOR 1699.926;
		LEVEL 1 FOR 5743.957;
	}
}

TRANSITION_LIST("signal_out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 555.162;
		LEVEL 1 FOR 100.029;
		LEVEL 0 FOR 99.971;
		LEVEL 1 FOR 100.029;
		LEVEL 0 FOR 199.971;
		LEVEL 1 FOR 700.029;
		LEVEL 0 FOR 99.971;
		LEVEL 1 FOR 200.029;
		LEVEL 0 FOR 199.971;
		LEVEL 1 FOR 200.029;
		LEVEL 0 FOR 99.971;
		LEVEL 1 FOR 300.029;
		LEVEL 0 FOR 1099.971;
		LEVEL 1 FOR 300.029;
		LEVEL 0 FOR 5744.809;
	}
}

TRANSITION_LIST("signal_out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 657.532;
		LEVEL 1 FOR 100.098;
		LEVEL 0 FOR 99.902;
		LEVEL 1 FOR 100.098;
		LEVEL 0 FOR 399.902;
		LEVEL 1 FOR 100.098;
		LEVEL 0 FOR 99.902;
		LEVEL 1 FOR 100.098;
		LEVEL 0 FOR 199.902;
		LEVEL 1 FOR 200.098;
		LEVEL 0 FOR 99.902;
		LEVEL 1 FOR 200.098;
		LEVEL 0 FOR 199.902;
		LEVEL 1 FOR 200.098;
		LEVEL 0 FOR 99.902;
		LEVEL 1 FOR 300.098;
		LEVEL 0 FOR 699.902;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 100.098;
			LEVEL 0 FOR 199.902;
		}
		LEVEL 1 FOR 5542.468;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "signal_in";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
	CHILDREN = 2, 3, 4, 5, 6, 7, 8, 9;
}

DISPLAY_LINE
{
	CHANNEL = "signal_in[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "signal_in[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "signal_in[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "signal_in[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "signal_in[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "signal_in[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "signal_in[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "signal_in[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "signal_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
	CHILDREN = 11, 12, 13, 14, 15, 16, 17, 18;
}

DISPLAY_LINE
{
	CHANNEL = "signal_out[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "signal_out[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "signal_out[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "signal_out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "signal_out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "signal_out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "signal_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "signal_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 10;
}

TIME_BAR
{
	TIME = 18925;
	MASTER = TRUE;
}
;
